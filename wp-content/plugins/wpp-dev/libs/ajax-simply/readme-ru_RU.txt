=== AJAX Simply ===

Plugin URI: https://wp-kama.com/ajax-simply.html

Позволяет быстро и удодбно создавать AJAX запросы на Wordpress.



== Description ==

Позволяет быстро и удодбно создавать AJAX запросы на Wordpress.


##### Что конкретно упрощает плагин?

Плагин не создает что-то новое, а «оборачивает» всю работу с AJAX в свою логику и значительно её упрощает. Отправил-обработал-получил - все просто! Это значит, что в случае чего, легко можно использовать базовую логику AJAX запросов в WordPress - это привычные хуки и дополнительные переменные самого AJAX запроса.

О какой «возне» можно забыть:

- Забываем про хуки и указываем функцию обработчик пряма из JS файла. Можно указать и метод класса, статический или публичный.

- Забываем про глобальные переменные $_POST, $_GET и удобно получаем данные отправленные на сервер в едином формате, без необходимости помнить, каким методом данные были отправлены и что с данных нужно убрать экранирование.

- Забываем про «неудобности» при получении данных с сервера обратно: они могут быть массивами объектами, числами, строками и т.д. И все это с учетом типа данных.

- Забываем про сложность сбора данных из HTML форм или HTML элемента с полями формы - передаем HTML элемент содержащий поля формы и значения всех полей будут собраны автоматом. Т.е. указываем форму и получаем готовый объект данных для отправки, который еще и можно расширить.

- Забываем про URL AJAX запроса, про то что этот URL постоянно нужно передавать при создании AJAX запроса, и про то что его нужно определить на фронте.

- Забываем про сложности при загрузке файлов через AJAX.

- Забываем про возню связанную с дебагом. Например, можно выдать данные в консоль браузера сразу из PHP (есть спец методы).

- Забываем про необходимость указать `die` или `exit` в конце PHP функции-обработчика.

Этот «сухой» список показывает о скольком можно не беспокоится используя плагин, но он не может передать того ощущения насколько все просто. Чтобы хоть как-то это почувствовать, смотрите примеры ниже.




= Документация =

Документацию вы найдет [по этой ссылке](https://wp-kama.ru/?p=9054).




== Installation ==

Вариант 1:
Установите из zip архива на странице плалгинов WordPress

Вариант 2:
1. Поместите папку ajax-simply из архива в папку `/wp-content/plugins/`.
1. Активируйте плагин на странице плагинов в админ-панели WordPress.



== Frequently Asked Questions ==

= Где я могу задать вопрос по плагину? =

В комментариях на [странице плагина](https://wp-kama.ru/?p=9054).




== Screenshots ==

1. Нет скринов...



== Changelog ==

= 1.3.4 =
* ADD: Если в ajaxs передан элемент формы, но в нем не нашлось ни одного поля с атрибутом 'name', то вместо 'name' у полей будет взят атрибут 'id'.

= 1.3.3 =
* IMPROVE: Дополнена очистка опций при сохранении в админке.

= 1.3.2 =
* IMPROVE: неправильно подключался файл перевода для страницы настроек, когда плагин устанавливается в MU каталог (mu-plugins).

= 1.3.1 =
* NEW: js функция `ajaxsURL( action )` для удобного получения ajax URL, когда нужно отправить запрос на плагин не через встроенную фукнцию плагина ajaxs(). Например для плагина `jQuery.validate()`. Параметры при этом нужно передавать в POST данных.

= 1.3.0 =
* NEW: теперь в параметре `$data` в `$jx->done($data)` или `$jx->error($data)` можно передать WP_Error объект, он будет обработан. `$data` в итоге превратиться в строку, со всеми сообщениями об ошибках, которые были в WP_Error объекте. `$jx->done()` при этом превратиться в `$jx->error()` автоматически, потому что в данных есть ошибка...

= 1.2.9.1 =
* NEW: Добавил вывод сообщений ошибок в консоль при нерабочем nonce коде или для хука ajaxs_allow_process. А то иногда непонятно почему не срабатывает запрос...

= 1.2.9 =
* NEW: Проверка подключенного jquery скрипта. Если jquery нет, он подключается автоматически с предупреждением об этом в консоли.

= 1.2.8 =
* NEW: параметр 'data.largeFileError' для параметра data фукнции ajaxs(). Вместе с ним новые опции, для установки максимального размера загружаемого файла. Эти опции можно установить через фильтры: `ajaxs_post_max_size` и `ajaxs_upload_max_filesize`.
* Поправлены мелкие баги в JS

= 1.2.7.1 =
* BUG: при преобразовании строк в числа.

= 1.2.7 =
* NEW: в параметр data передавемый в AJAX собитии добавлены параметры action (текущий action указанный в ajaxs) и origin_data (неизменные данные указанные в ajaxs). Нужно это, чтобы удобно было идентифицировать ajaxs запрос при обработке JS событий и удобно пожно было получать DOM элементы если они были переданы в данных ajaxs.

= 1.2.6 =
* NEW: для JS событий `ajaxs_always` и `ajaxs_fail` в принимаемые данные добавлен параметр jx.
* BUG: неправильно собирались данные для input с типом text, если в name указывался массив, пр: `<input type="text" name="key[]">`.

= 1.2.5 =
* NEW: При получении значений через магические свойства, например '$jx->key', числа конвертируются из строки в число, а у строк удаляются пробелы на концах.

= 1.2.4 =
* NEW: Если в JS (AJAX) передать переменную как булевое значение или число, то в PHP мы получаем его в виде строки: передали false > получили "false". Такое поведение иногда сильно затрудняет разработку, потому что порой непонятно почему не работает код: передали false, при получении проверям переменную в if(), но она работает, потому что там строка "false", что равно true при првоерке... Чтобы избавится от подобных проблем, теперь ajaxs конвертирует булевые значения в их реальные типы!
* BUG: Метод `$jx->log()` не полностью копировал `$jx->console()` - не понимал если передать сразу несколько параметров для вывода в лог.

= 1.2.3 =
* BUG: В файле опций были PHP комменты из-за которых в списке плагинов появляется плагин Primer...

= 1.2.2 =
* NEW: Добавил страницу опций. Теперь можно удобно включать базовую nonce проверку, подключать скрипт inline и определять файл обработчика на фронте. Для этого всего не нужно дописывать хуки куда-то в код...

= 1.2.1 =
* NEW: парметр 'uploadProgress' для второго параметра JS функции ajaxs(action, data). Он позволяет получить прогресс загрузки файла. В параметр нужно указать функцию, которая будет динамически получать процент загрузки файла в JS.


= 1.2.0 =
* IMPROVE: теперь параметр data.ajax, передаваемый в параметрах фукнции ajaxs() удаляется на ранней стадии, чтобы не быть частью общих параметров. Это нужно для безопасности при авто-сборе значений полей формы.

= 1.1.9 =
* NEW: Для удобаства: когда загружается несколько файлов (multiple) в массиве получаемых данных о файлах, добавлется новый индекс 'compact', куда собраны данные каздого файла в отдельный массив, как если бы не использовали multiple. Это иногда гораздо удобнее для обработки, особенно для WordPress. При этом прежняя структура массива не удаляется, а просто расширяется новым индексом 'compact'.

= 1.1.8 =
* NEW: новый метод `$jx->done()` и `$jx->ok()` - копии `$jx->success()` (для удобства).
* NEW: теперь методы `$jx->success()` и `$jx->error()` возвращают объект, в который для удобства добавлены новые параметры: error, ok.

= 1.1.6 =
* FIX: `$jx->jseval('return;')` вызывало ошибку: `Syntax Error: Illegal return statement`.

= 1.1.5 =
* NEW: `$jx->call( $func_name, $param1, $param2, ... )` в вызываемую функцию параметры `$param1, $param2, ...` передаются как указано в `$jx->call()`. `$func_name` может содержать префикс `window.` он будет вырезан. `$func_name` может быть свойством вложенного в window объекта: пр. `window.myObject.functionName` или просто `myObject.functionName`.

= 1.1.4 =
* NEW: `$jx->success( $data )`, `$jx->error( $data )` - $data параметр стал необязательным.

= 1.1.3 =
* NEW: метод `$jx->log()` = `$jx->console()`. Для удобства...

= 1.1.2 =
* NEW: хук-фильтр 'ajaxs_allow_process'. Для вставки общих проверок через фильтр, перед обработкой запроса. Например, если для группы запросов нужна одна и та же проверка прав доступа, чтобы не писать каждый раз в фукнции обработчике одно и тоже, можно через этот хук добавить проверку один раз...

= 1.1.0 =
* NEW: теперь можно еще и вызывать класс с любым именем, а префикс 'ajaxs_' или 'ajaxs_priv_' устанавливать для метода класса, а не для самого класса. Так иногда удобнее.

= 1.0 =
* CHANGE: Для безопасности, теперь, название класса обработчика аякс запросов должно иметь префикс 'AJAXS_'. Произвольный доступ к методам класса через глобальную переменную или функцию был удален! Для этого нововведения, возможно нужно будет поправить свой PHP код! Изивините за неудобства, но это очень важный момент, который я не учел заранее!

= 0.950 =
* NEW: Теперь, методы: `$jx->console()` и `$jx->dump()` могут принимать сразу несколько параметров. Как в JS: `$jx->console( 'one', 'two', 'three', ... )`

= 0.948 =
* NEW: Переменная AJAX_Simply_Core::files стала магической.

= 0.947 =
* NEW: Теперь, плагин ловит PHP ошибки на раннем этапе и показыавет их в консоли бразуера. Фатальные ошибки выделяются красным: console.error().

= 0.946 =
* NEW: Теперь, если в ответе нет экстра параметров, он возвращается как есть, а не как сложный json объект... Это позволит интегрировать работу плагина со скриптами вроде `jQuery.validate()`.

= 0.945 =
* NEW: PHP ошибки включая фатальные теперь показываются в консоли браузера. Только если включен режим дебага - WP_DEBUG.

= 0.917 =
* Более-менее стабильный релиз


